version: '3'
services:

  prometheus:
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    volumes:
      - ./prom_data/:/prometheus/
    command: --config.file=/prometheus/prometheus.yml
  
  psql_app_db:
    image: postgres:latest
    container_name: psql_app_db_example
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - 5430:5432
    volumes:
      - ./data/taxi.sql:/docker-entrypoint-initdb.d/taxi.sql

  redis:
    image: 'redis/redis-stack-server:latest'
    container_name: redis_aligned_example
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - 6378:6379
  
  aligned-ui:
    image: 'matsmoll/aligned-ml-ui:latest'
    container_name: aligned-ml-ui-example
    command: python run.py serve
    environment:
      - PUBLIC_FEATURE_STORE_URL=http://aligned-server:8000
      - PROMETHEUS_URL=http://prometheus:9090
      - PUBLIC_MONITORING_REFRESH_INTERVAL=15000
      - NAMESPACE=aligned
    ports:
      - 8002:5173/
    volumes:
      - ./feature-store.json:/opt/app/feature-store.json

  aligned-server:
    platform: linux/amd64
    image: 'matsmoll/aligned-ml:latest'
    container_name: aligned-ml-example
    environment:
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    command: serve --host 0.0.0.0
    ports:
      - 8001:8000
    volumes:
      - ./feature-store.json:/opt/app/feature-store.json
      - ./server.py:/opt/app/server.py
    
  aligned-worker:
    platform: linux/amd64
    image: 'matsmoll/aligned-ml:latest'
    restart: always
    container_name: aligned-ml-worker-example
    environment:
      - REDIS_URL=redis://redis:6379
      - KAFKA_SERVER=broker:29092
    depends_on:
      - redis
      - broker
    command: serve-worker --prune-unused-features true
    volumes:
      - ./feature-store.json:/opt/app/feature-store.json
      - ./worker.py:/opt/app/worker.py
    
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
